ROBOT command

  KGCL-Java provides a {{{http://robot.obolibrary.org/}ROBOT}} command
  <<<apply>>> that is intended to allow the injection of KGCL-specified
  changes as part of a ROBOT pipeline.
  
* Enabling the KGCL command in ROBOT

  Ultimately, the <<<apply>>> command will be provided either under the
  form of a <plugin> that could be loaded dynamically by the standard
  distribution of ROBOT (if/when ROBOT supports the use of such
  plugins), or directly as a built-in command (ROBOT developers have
  already expressed interest in having the command merged into ROBOT).
  
  In the meantime, building KGCL with the standard Maven goal
  <<<package>>> will produce, among other artifacts, a Jar file named
  <<<kgcl-robot-standalone-X.Y.Z.jar>>>. That file contains a full
  distribution of the latest version of ROBOT (1.9.4) in which the
  <<<apply>>> command is available as a built-in commands (in addition
  to all the standard commands).
  
  Alternatively, if you have a version of ROBOT that supports plugins
  (unlikely, unless you happen to be me), you can use the
  <<<kgcl-robot-plugin-X.Y.Z.jar>>> artifact (also produced by the
  <<<package>>> goal). Place that file in your ROBOT plugins directory
  (e.g., <<<~/.robot/plugins/kgcl.jar>>>): the command will then be
  available under the name <<<kgcl:apply>>>.

* Usage

  The <<<apply>>> command takes a single KGCL instruction specified with
  the <<<-k>>> (or <<<--kgcl>>>) option, or a KGCL file (with one
  instruction per line) specified with the <<<-K>>> (or
  <<<--kgcl-file>>>) option. Both options can be used repeatedly, to
  specify more than one change (with <<<-k>>>) or changes from more than
  one file (with <<<-K>>>). It applies the change(s) to the current
  ontology loaded in ROBOT.
  
  For example, the following command will apply the changes described in
  the <<<changes.kgcl>>> file to the ontology read from <<<input.ofn>>>,
  and save the modified ontology in <<<output.ofn>>>:
  
+-------------------------------------------------------
$ robot apply -i input.ofn -K changes.kgcl -o output.ofn
+-------------------------------------------------------

  To apply a single change directly from the command line instead:
  
+----------------------------------------------------------------------------
$ robot apply -i input.ofn -k "create class EX:999 'new class'" -o output.ofn
+----------------------------------------------------------------------------

  As for any other ROBOT command, the <<<-i>>> and <<<-o>>> options may
  be omitted if the <<<apply>>> command is not the first or last command
  of the pipeline:
  
+--------------------------------------------------------------------
$ robot merge -i input1.ofn -i input2.ofn \
        apply -K changes.kgcl \
        annotate --ontology-iri http://example.org/test -o output.ofn
+--------------------------------------------------------------------

  If some changes cannot be applied because they don’t match the
  contents of the ontology (for example, a change that tries to add a
  label to a class that does not exist), they will be written back to a
  file with the same name as the original KGCL file (the first KGCL
  file, if more than one has been specified), with a <<<.rej>>>
  extension appended. Use the <<<--reject-file>>> to specify the name of
  another file where to write the rejected changes, or
  <<<-no-reject-file>>> to disable writing back rejected changes. 
  
  The other changes (those that <can> be applied) will be applied
  normally, unless the <<<--no-partial-apply>>> option is used – in
  which case the command will refuse to apply any changes at all unless
  they can all be applied.
